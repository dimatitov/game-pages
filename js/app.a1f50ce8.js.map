{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/scripts/utils/getCellElementsByMatrixState.js","webpack:///./src/scripts/utils/addCellWithRandomPositionToMatrix.js","webpack:///./src/scripts/constants/directions.js","webpack:///./src/scripts/utils/turnMatrix90DegreesToLeft.js","webpack:///./src/scripts/utils/moveValues.js","webpack:///./src/scripts/utils/moveAndStackValues.js","webpack:///./src/scripts/utils/stackValues.js","webpack:///./src/scripts/state.js","webpack:///./src/scripts/utils/turnMatrix.js","webpack:///./src/scripts/controller.js","webpack:///./src/scripts/game.js","webpack:///./src/scripts/constants/mapKeyCodeToDirection.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","getCellElementsByMatrixState","state","flat","map","cell","cellElement","document","createElement","textContent","classList","add","addCellWithRandomPositionToMatrix","every","clonedState","cloneDeep","randomIndexByX","random","randomIndexByY","cellHasBeenInstalled","DIRECTIONS","turnMatrix90DegreesToLeft","newState","newColumn","reduce","acc","row","firstCell","reverse","moveValuesLeftToRight","forEach","cellIndex","cells","nextCell","moveValuesRightToLeft","foreachRight","moveValues","moveFunctions","times","index","moveFn","moveAndStackValues","stackValues","matrixState","createStore","eventInitialize","createEvent","eventAddCellWithRandomPositionToMatrix","eventTurnMatrixToLeftFrom","eventTurnMatrixFromLeftTo","eventMoveAndStackValues","on","matrix","from","turnMatrixToLeftFrom","to","turnMatrixFromLeftTo","watch","payload","cellElements","playFieldElement","getElementById","innerHTML","appendChild","initialState","controller","MAP_DIRECTION_TO_KEY_CODE","console","log","addEventListener","event","keyCode"],"mappings":"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","file":"js/app.a1f50ce8.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([116,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export const getCellElementsByMatrixState = (state) => {\r\n  return state\r\n    .flat()\r\n    .map((cell) => {\r\n      const cellElement = document.createElement('div');\r\n      if (cell !== 0) {\r\n        cellElement.textContent = `${cell}`;\r\n        cellElement.classList.add('thing', `t${cell}`)\r\n      } else {\r\n        cellElement.classList.add('t0')\r\n      }\r\n      return cellElement;\r\n    })\r\n}\r\n","import cloneDeep from 'lodash.clonedeep'\r\nimport random from 'lodash.random'\r\n\r\n/**\r\n * Генерирует рандомные значения по оси x, y\r\n * и пытается записать значение по этим координатам.\r\n * Пытается до тех пор пока не запишет значение в рандомную пустую ячейку.\r\n * @param state\r\n * @returns {*}\r\n */\r\nexport const addCellWithRandomPositionToMatrix = (state) => {\r\n  const isFullMatrix = state.flat().every((cell) => cell !== 0)\r\n\r\n  if (isFullMatrix) {\r\n    return state\r\n  }\r\n\r\n  const clonedState = cloneDeep(state)\r\n\r\n  let randomIndexByX = random(0, 3)\r\n  let randomIndexByY = random(0, 3)\r\n\r\n  let cellHasBeenInstalled = false\r\n\r\n  while (!cellHasBeenInstalled) {\r\n    const randomRow = clonedState[randomIndexByX]\r\n    const randomCellInRandomRow = randomRow[randomIndexByY]\r\n\r\n    if (randomCellInRandomRow === 0) {\r\n      clonedState[randomIndexByX][randomIndexByY] = 2\r\n      cellHasBeenInstalled = true\r\n    }\r\n\r\n    randomIndexByX = random(0, 3)\r\n    randomIndexByY = random(0, 3)\r\n  }\r\n\r\n  return clonedState\r\n}\r\n","export const DIRECTIONS = {\r\n  LEFT: 'LEFT',\r\n  TOP: 'TOP',\r\n  RIGHT: 'RIGHT',\r\n  BOTTOM: 'BOTTOM',\r\n}\r\n","import cloneDeep from \"lodash.clonedeep\";\r\n\r\n/**\r\n * Поворачивает матрицу на 90 градусов влево\r\n * Алгоритм:\r\n *  1) Вырезать первые ячейки из каждой строки, сделать из них массив,\r\n *  сделать реверс этого массива и запушить в новый массив\r\n *  2) Повторять пока в исходном массиве еще есть ячейки\r\n * @param state\r\n * @returns {[]}\r\n */\r\nexport const turnMatrix90DegreesToLeft = (state) => {\r\n  const clonedState = cloneDeep(state)\r\n  const newState = []\r\n\r\n  while (clonedState[0].length !== 0) {\r\n    const newColumn = clonedState.reduce((acc, row) => {\r\n      const firstCell = row.shift()\r\n      return [...acc, firstCell]\r\n    }, [])\r\n\r\n    newState.push(newColumn.reverse())\r\n  }\r\n\r\n  return newState\r\n}\r\n","import foreachRight from 'lodash.foreachright'\r\nimport cloneDeep from 'lodash.clonedeep'\r\nimport times from 'lodash.times'\r\n\r\n/**\r\n * Обходит массив слева направо и сдвигает нули слева направо\r\n * за 1 вызов может сдвинуть только 1 ноль в крайнее правое положение\r\n * @param state\r\n * @returns {state}\r\n */\r\nconst moveValuesLeftToRight = (state) => {\r\n  state.forEach((row) => {\r\n    row.forEach((cell, cellIndex, cells) => {\r\n      const nextCell = cells[cellIndex + 1]\r\n\r\n      if (cell === 0 && nextCell) {\r\n        cells[cellIndex] = nextCell\r\n        cells[cellIndex + 1] = 0\r\n      }\r\n    })\r\n  })\r\n  return state\r\n}\r\n\r\n/**\r\n * Обходит массив справа налево и сдвигает нули слева направо\r\n * за 1 вызов может сдвинуть только 1 ноль в крайнее правое положение\r\n * @param state\r\n * @returns {*}\r\n */\r\nconst moveValuesRightToLeft = (state) => {\r\n  state.forEach((row) => {\r\n    foreachRight(row, (cell, cellIndex, cells) => {\r\n      const nextCell = cells[cellIndex - 1];\r\n\r\n      if (nextCell && nextCell === 0) {\r\n        cells[cellIndex - 1] = cell;\r\n        cell[cellIndex] = 0;\r\n      }\r\n    })\r\n  })\r\n  return state;\r\n}\r\n\r\n/**\r\n * Сдвигает нули в крайнее правое положение\r\n *  Функции moveValuesLeftToRight, moveValuesRightToLeft за 1 вызов\r\n *  могут свдинуть только 1 ноль в крайнее левое положение, поэтому для того,\r\n *  чтобы сдвинуть все нули в крайнее правое положение нужно вызвать эти функции поочередно\r\n *  столько раз, сколько у нас ячеек в строке(массиве) - 1\r\n * @param state\r\n * @returns state\r\n */\r\nexport const moveValues = (state = []) => {\r\n  const moveFunctions = times(state.length, (index) => {\r\n    const isEven = (index + 1) % 2 !== 0\r\n    return isEven ? moveValuesRightToLeft : moveValuesLeftToRight\r\n  })\r\n\r\n  let result = cloneDeep(state)\r\n\r\n  moveFunctions.forEach((moveFn) => {\r\n    result = moveFn(result)\r\n  })\r\n\r\n  return result\r\n}\r\n\r\n\r\n\r\n","import { moveValues } from \"./moveValues\";\r\nimport { stackValues } from './stackValues'\r\n\r\n/**\r\n * Двигает и стакает значения в матрице\r\n * Алгоритм: move -> stack -> move\r\n * @param state\r\n * @returns {state}\r\n */\r\nexport const moveAndStackValues = (state) =>\r\n  moveValues(stackValues(moveValues(state)))\r\n","import cloneDeep from \"lodash.clonedeep\";\r\n\r\n/**\r\n * Стакает влево поля с одинаковыми значениями value\r\n * @param state\r\n * @returns state\r\n */\r\nexport const stackValues = (state) => {\r\n  const clonedState = cloneDeep(state)\r\n\r\n  clonedState.forEach((row) => {\r\n    row.forEach((cell, cellIndex, cells) => {\r\n      const nextCell = cells[cellIndex + 1]\r\n\r\n      if (nextCell && cell === nextCell) {\r\n        cells[cellIndex] += nextCell\r\n        cells[cellIndex + 1] = 0\r\n      }\r\n    })\r\n  })\r\n\r\n  return clonedState\r\n}\r\n","import { createStore, createEvent } from 'effector'\r\nimport { addCellWithRandomPositionToMatrix } from \"./utils/addCellWithRandomPositionToMatrix\";\r\nimport { turnMatrixToLeftFrom, turnMatrixFromLeftTo } from './utils/turnMatrix'\r\nimport { moveAndStackValues } from './utils/moveAndStackValues'\r\nimport { getCellElementsByMatrixState } from './utils/getCellElementsByMatrixState'\r\n\r\nexport const matrixState = createStore([\r\n    [0, 0, 0, 0],\r\n    [0, 0, 0, 0],\r\n    [0, 0, 0, 0],\r\n    [0, 0, 0, 0]\r\n])\r\n\r\nexport const eventInitialize = createEvent('eventInitialize');\r\n\r\nexport const eventAddCellWithRandomPositionToMatrix = createEvent('eventAddCellWithRandomPositionToMatrix')\r\n\r\nexport const eventTurnMatrixToLeftFrom = createEvent('eventTurnMatrixToLeftFrom')\r\n\r\nexport const eventTurnMatrixFromLeftTo = createEvent('eventTurnMatrixFromLeftTo')\r\n\r\nexport const eventMoveAndStackValues = createEvent('eventMoveAndStackValues')\r\n\r\n\r\n\r\nmatrixState.on(eventInitialize, (matrix) => addCellWithRandomPositionToMatrix(matrix))\r\n\r\nmatrixState.on(eventAddCellWithRandomPositionToMatrix, (matrix) => addCellWithRandomPositionToMatrix(matrix))\r\n\r\nmatrixState.on(eventTurnMatrixToLeftFrom, (matrix, from) => turnMatrixToLeftFrom(matrix, from))\r\n\r\nmatrixState.on(eventTurnMatrixFromLeftTo, (matrix, to) => turnMatrixFromLeftTo(matrix, to))\r\n\r\nmatrixState.on(eventMoveAndStackValues, (matrix) => moveAndStackValues(matrix))\r\n\r\n\r\nmatrixState.watch((matrix, payload) => {\r\n  const cellElements = getCellElementsByMatrixState(matrix)\r\n  const playFieldElement = document.getElementById('playfield')\r\n  playFieldElement.innerHTML = ''\r\n\r\n  cellElements.forEach((cell) => {\r\n    playFieldElement.appendChild(cell)\r\n  })\r\n})\r\n","import { DIRECTIONS } from '../constants/directions'\r\nimport { turnMatrix90DegreesToLeft } from './turnMatrix90DegreesToLeft'\r\n\r\n/**\r\n * Вращает матрицу по часовой стрелке n-ое кол-во в положение \"влево\" из положения \"from\",\r\n * кол-во вращений зависит от того из какого положения мы вращаем матрицу.\r\n * @param state\r\n * @param from\r\n * @returns {*[]|*}\r\n */\r\nexport const turnMatrixToLeftFrom = (state, from) => {\r\n  switch (from) {\r\n    case DIRECTIONS.LEFT:\r\n      return state\r\n\r\n    case DIRECTIONS.TOP:\r\n      return turnMatrix90DegreesToLeft(turnMatrix90DegreesToLeft(turnMatrix90DegreesToLeft(state)))\r\n\r\n    case DIRECTIONS.RIGHT:\r\n      return turnMatrix90DegreesToLeft(turnMatrix90DegreesToLeft(state))\r\n\r\n    case DIRECTIONS.BOTTOM:\r\n      return turnMatrix90DegreesToLeft(state)\r\n  }\r\n}\r\n\r\n/**\r\n * Вращает матрицу по часовой стрелке n-ое кол-во в положение \"to\" из положения \"влево\",\r\n * кол-во вращений зависит от того в какое положения мы вращаем матрицу.\r\n * @param state\r\n * @param to\r\n * @returns {*[]|*}\r\n */\r\nexport const turnMatrixFromLeftTo = (state, to) => {\r\n  switch (to) {\r\n    case DIRECTIONS.LEFT:\r\n      return state\r\n\r\n    case DIRECTIONS.TOP:\r\n      return turnMatrix90DegreesToLeft(state)\r\n\r\n    case DIRECTIONS.RIGHT:\r\n      return turnMatrix90DegreesToLeft(turnMatrix90DegreesToLeft(state))\r\n\r\n    case DIRECTIONS.BOTTOM:\r\n      return turnMatrix90DegreesToLeft(turnMatrix90DegreesToLeft(turnMatrix90DegreesToLeft(state)))\r\n  }\r\n}\r\n","import { eventInitialize, eventAddCellWithRandomPositionToMatrix, eventMoveAndStackValues, eventTurnMatrixFromLeftTo, eventTurnMatrixToLeftFrom } from './state'\r\nimport { DIRECTIONS } from './constants/directions'\r\n\r\nexport const controller = {\r\n  handlePressLeftArrow: () => {\r\n    eventMoveAndStackValues()\r\n    eventAddCellWithRandomPositionToMatrix()\r\n  },\r\n\r\n  handlePressTopArrow: () => {\r\n    eventTurnMatrixToLeftFrom(DIRECTIONS.TOP)\r\n    eventMoveAndStackValues()\r\n    eventTurnMatrixFromLeftTo(DIRECTIONS.TOP)\r\n    eventAddCellWithRandomPositionToMatrix()\r\n  },\r\n\r\n  handlePressRightArrow: () => {\r\n    eventTurnMatrixToLeftFrom(DIRECTIONS.RIGHT)\r\n    eventMoveAndStackValues()\r\n    eventTurnMatrixFromLeftTo(DIRECTIONS.RIGHT)\r\n    eventAddCellWithRandomPositionToMatrix()\r\n  },\r\n\r\n  handlePressBottomArrow: () => {\r\n    eventTurnMatrixToLeftFrom(DIRECTIONS.BOTTOM)\r\n    eventMoveAndStackValues()\r\n    eventTurnMatrixFromLeftTo(DIRECTIONS.BOTTOM)\r\n    eventAddCellWithRandomPositionToMatrix()\r\n  },\r\n}\r\n","import { getCellElementsByMatrixState } from './utils/getCellElementsByMatrixState'\r\nimport { addCellWithRandomPositionToMatrix } from \"./utils/addCellWithRandomPositionToMatrix\";\r\nimport { controller } from './controller'\r\nimport { MAP_DIRECTION_TO_KEY_CODE } from './constants/mapKeyCodeToDirection'\r\nimport { eventInitialize } from './state'\r\n\r\nconst initialize = () => {\r\n  const initialState = addCellWithRandomPositionToMatrix([\r\n    [0, 0, 0, 0],\r\n    [0, 0, 0, 0],\r\n    [0, 0, 0, 0],\r\n    [0, 0, 0, 0]\r\n  ]);\r\n\r\n  const cellElements = getCellElementsByMatrixState(initialState)\r\n  const playFieldElement = document.getElementById('playfield')\r\n\r\n  cellElements.forEach((cell) => {\r\n    playFieldElement.appendChild(cell)\r\n  })\r\n  console.log('playFieldElement', playFieldElement)\r\n  console.log('cellElements', cellElements)\r\n  eventInitialize()\r\n\r\n  console.log('eventInitialize', eventInitialize)\r\n\r\n  document.addEventListener('keyup', (event) => {\r\n    switch (event.keyCode) {\r\n      case MAP_DIRECTION_TO_KEY_CODE.LEFT:\r\n        controller.handlePressLeftArrow()\r\n        break\r\n\r\n      case MAP_DIRECTION_TO_KEY_CODE.TOP:\r\n        controller.handlePressTopArrow()\r\n        break\r\n\r\n      case MAP_DIRECTION_TO_KEY_CODE.RIGHT:\r\n        controller.handlePressRightArrow()\r\n        break\r\n\r\n      case MAP_DIRECTION_TO_KEY_CODE.BOTTOM:\r\n        controller.handlePressBottomArrow()\r\n        break\r\n    }\r\n  })\r\n}\r\n\r\ninitialize()\r\n","export const MAP_DIRECTION_TO_KEY_CODE = {\r\n  LEFT: 37,\r\n  TOP: 38,\r\n  RIGHT: 39,\r\n  BOTTOM: 40,\r\n}\r\n"],"sourceRoot":""}